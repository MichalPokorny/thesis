* nekde vic detailu
* (pridat to uvodu reference na clanky o prislusnych strukturach?)
* $B$-strom => $b$-strom konzistentne
* experiment: klasicke struktury vc. napriklad Red-Black, cuckoo, klasicke hash
  tabulky
* mereni spotreby pameti
* jeste nejaka realna data
* vysledkova kapitola
* oznamit, ze budu merit na Lenovu
* oznamit CPU Lenova, kolik ma jader
* Konkretni latence (vykrast od Intelu) -- odkaz na AIM (van Eick)
* veta o konstantnim faktoru oproti dokonale cache
* externi pamet: mozna zminit trik, ze staci pocitat read I/Os? (assuming ze
  prectu cokoliv co jsem zapsal)
* B-trees: <=$b$ key-value pairs: mam tam dost zmatek v $b$/$b$+1, otevrene a
  uzavrene intervaly, atd.
* generalizovat na (a,b)-stromy? (b=2a NEBO b=2a-1: jine amortizovane chovani
  na sekvenci INSERTu - DELETu, b=2a je rychlejsi)
* potencial definovany vahami -> mozna w_i=1 misto w_i=1/N
  (potencial pak bude porad fungovat, i pri insert/delete)
* citace: [x] nebo (2001): muzu pouzit i jiny standard kdyz bude lepsi
* plavou mi pismena v k-splay
* (nasobeni 2^x-1: nebylo by to rychlejsi?)
* knihovni cast, neobecna (explicitne) VS experimenty nad tim napsane
* (pointery - nezpomaluje experimenty virtualnost? asi aspon oddiskutovat)
* find_next/_prev pointers? aspon oddiskutovat ze to nedelame.
* upravovatelne pointery? ("vrat mi pointer, ja ho budu upravovat do dalsiho
  accessu)
* vraceni intu? mel bych to natypedefovat na chybovou navratovou hodnotu
* slova -> integery pomoci simple hash fn: popsat simple hash fn
* experiment o neuspesnych findech
